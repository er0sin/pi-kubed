#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Add Google apt key
  become            : True
  when              : ansible_pkg_mgr == "apt"
  apt_key           :
    url             : https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state           : present
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Find apt repo for current architecture
  when              : ansible_pkg_mgr == "apt"
  uri               :
    url             : "{{ apt_repo_base }}/dists/{{ item }}/main/binary-{{  arc_map[ansible_architecture].apt }}"
    return_content  : False
    status_code     :
    - 200
    - 404
  with_items        : "{{ apt_repo_prefs }}"
  register          : repos
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Add apt repo
  become            : True
  when              : ansible_pkg_mgr == "apt"
  apt_repository    :
    repo            : "deb {{ apt_repo_base }}/ {{ (repos.results | selectattr('status', 'equalto', 200) | map(attribute='item') | list)[0] }} main"
    state           : present
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Add yum repo
  become            : True
  when              : ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf"
  yum_repository    :
    name            : kubernetes
    description     : Google kubernetes repo
    baseurl         : "https://packages.cloud.google.com/yum/repos/kubernetes-el7-{{ ansible_architecture }}"
    state           : present
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Install kubeadm, kubelet, kubectl
  become            : True
  action            :
    module          : "{{ ansible_pkg_mgr }}"
    update_cache    : True
    state           : present
    name            :
    - kubeadm
    - kubelet
    - kubectl
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Hold kubeadm, kubelet, kubectl
  become            : True
  when              : ansible_pkg_mgr == "apt"
  dpkg_selections   :
    name            : "{{ item }}"
    selection       : hold
  with_items        :
  - kubeadm
  - kubelet
  - kubectl
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Hold kubeadm, kubelet, kubectl
  # TODO: Switch to yum_versionlock when ansible 2.10 is out
  # See: https://github.com/ansible-collections/community.general/pull/324
  become            : True
  when              : ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf"
  shell             : |
                       {{ ansible_pkg_mgr }} versionlock list | grep -q {{ item }} && echo "already locked" && exit 0
                       {{ ansible_pkg_mgr }} versionlock add {{ item }}
                       exit ${?}
  args              :
    warn            : False
  register          : hold
  changed_when      : "'already locked' not in hold.stdout"
  with_items        :
  - kubeadm
  - kubelet
  - kubectl
  tags              :
  - packages
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
