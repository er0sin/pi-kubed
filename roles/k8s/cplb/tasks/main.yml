#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Import vars from common
  include_vars      : "../common/{{ item }}/main.yml"
  with_items        :
  - defaults
  - vars
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Sanity Check
  assert            :
    that            :
    - groups.k8s_leader | length == 1
    fail_msg        : Only 1 leader allowed
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Find leader
  set_fact          :
    leader          : "{{ groups.k8s_leader | first }}"
  run_once          : True
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Install packages
  become            : True
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  package           :
    name            : "{{ item }}"
    state           : "{{ 'absent' if item == 'nginx' and not master.cplb_port else 'present'}}"
    update_cache    : True
  with_items        :
  - nginx
  - keepalived
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Find ngx_stream_module.so
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - master.cplb_port
  stat              :
    path            : "{{ item }}"
  register          : module
  with_items        :
  - /usr/lib/nginx/modules/ngx_stream_module.so
  - /usr/lib64/nginx/modules/ngx_stream_module.so
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Copy nginx.conf
  vars              :
    module_path     : "{{ module.results | selectattr('stat', 'contains', 'path') | map(attribute='stat') | map(attribute='path') | list | first }}"
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - master.cplb_port # nginx load balancing enabled
  become            : True
  template          :
    src             : templates/nginx.conf.j2
    dest            : /etc/nginx/nginx.conf
    mode            : 0644
  register          : nginx_conf
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Allow NGINX to listen on tcp port "{{ master.cplb_port }}"
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - master.cplb_port # nginx load balancing enabled
  become            : True
  seport            :
    ports           : "{{ master.cplb_port }}"
    proto           : tcp
    setype          : http_port_t
    state           : present
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Start NGINX
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - master.cplb_port # nginx load balancing enabled
  become            : True
  systemd           :
    name            : nginx.service
    state           : "{{ 'restarted' if nginx_conf.changed else 'started' }}"
    enabled         : True
  no_log            : True # log for this is useless and verbose
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Check if keepalived.conf exists
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  stat              :
    path            : /etc/keepalived/keepalived.conf
  delegate_to       : "{{ leader }}"
  run_once          : True
  register          : keepalived_conf
  become            : True
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Parse key from existing keepalived.conf
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - keepalived_conf.stat.exists
  shell             : |
                      grep "^\s*auth_pass\s" /etc/keepalived/keepalived.conf | awk '{print $2}'
  delegate_to       : "{{ leader }}"
  run_once          : True
  register          : existing_key
  changed_when      : False
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Generate Key for keepalived
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - not existing_key.stdout | default(False, True)
  # Ansible's b64encode filter doesn't support binary data, so encode in shell instead
  shell             : "head -c 16 /dev/urandom | base64"
  register          : generated_key
  no_log            : True
  changed_when      : False
  run_once          : True
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Copy keepalived.conf
  vars              :
    auth_key        : "{{ existing_key.stdout if existing_key.stdout | default(False) else generated_key.stdout }}"
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  become            : True
  template          :
    src             : templates/keepalived.conf.j2
    dest            : /etc/keepalived/keepalived.conf
    mode            : 0644
  register          : keepalived_conf
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Start keepalived
  when              :
  - master.cplb_vip  # cplb enabled
  - not master.external_cplb
  - "'k8s_leader' in group_names" # on leader only
  become            : True
  systemd           :
    name            : keepalived.service
    state           : "{{ 'restarted' if keepalived_conf.changed else 'started' }}"
    enabled         : True
  no_log            : True # log for this is useless and verbose
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
