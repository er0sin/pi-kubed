#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Import vars from common
  include_vars      : "../../common/{{ item }}/main.yml"
  with_items        :
  - defaults
  - vars
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Sanity Check
  assert            :
    that            :
    - ansible_play_hosts | length == 1
    - ansible_play_hosts == groups.k8s_leader
    fail_msg        : Only 1 leader allowed
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Find leader
  set_fact          :
    leader          : "{{ ansible_play_hosts | first }}"
  run_once          : True
  tags              :
  - always
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Enable Secret Encryption (Part 1)
  when              : features.encryption.enabled
  import_tasks      : encryption.yml
  tags              :
  - encryption
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Copy cluster config
  template          :
    src             : templates/cluster-config.yaml.j2
    dest            : /tmp/cluster-config.yaml
    mode            : 0600
  changed_when      : False
  tags              :
  - init
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : kubeadm init
  become            : True
  command           : "kubeadm init --upload-certs --config /tmp/cluster-config.yaml"
  args              :
    creates         : /var/lib/kubelet/config.yaml
  register          : kubeadm_init
  tags              :
  - init
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Enable kubelet
  become            : True
  systemd           :
    name            : kubelet.service
    enabled         : True
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Cleanup cluster config
  file              :
    path            : /tmp/cluster-config.yaml
    state           : absent
  changed_when      : False
  tags              :
  - init
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Enable Secret Encryption (Part 2)
  when              : features.encryption.enabled
  import_tasks      : "{{ role_path }}/../common/tasks/encryption.yml"
  tags              :
  - encryption
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Create .kube dir
  file              :
    path            : "{{ ansible_user_dir }}/.kube"
    state           : directory
  tags              :
  - kubeconfig
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Copy kubeconfig
  become            : True
  copy              :
    remote_src      : True
    src             : /etc/kubernetes/admin.conf
    dest            : "{{ ansible_user_dir }}/.kube/config"
    owner           : "{{ ansible_user_uid | string }}"
    group           : "{{ ansible_user_gid | string }}"
    mode            : 0600
  tags              :
  - kubeconfig
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Install CNI plugin
  shell             : kubectl apply -f "{{ item }}" --dry-run={{ 'client' if ansible_check_mode else 'none' }}
  register          : cni_install
  changed_when      : "'created' in cni_install.stdout or 'configured' in cni_install.stdout"
  retries           : 3
  delay             : 5
  until             : cni_install.rc == 0
  with_items        : "{{ cni_urls[cni_plugin].manifests | default([]) }}"
  tags              :
  - cni
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Install CNI plugin
  when              :
  - not ( cni_urls[cni_plugin].manifest | default('') )
  - cni_urls[cni_plugin].helm | default('')
  shell             :
    which helm || curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash -s -- -v v3.3.1 &&
    helm repo add {{ cni_plugin }} {{ cni_urls[cni_plugin].helm.repo }} &&
    helm template {{ cni_plugin }} {{ cni_urls[cni_plugin].helm.chart }} --version {{ cni_urls[cni_plugin].helm.version }} --namespace kube-system
    {% for key,value in cni_urls[cni_plugin].helm.overrides.items() %}
      --set
      {{ key }}{% raw %}='{% endraw -%}
      {{ value }}
      {%- raw %}'{% endraw %}
    {% endfor %} | kubectl apply --dry-run={{ 'client' if ansible_check_mode else 'none' }} -f -
  register          : cni_install
  changed_when      : "'created' in cni_install.stdout or 'configured' in cni_install.stdout"
  retries           : 3
  delay             : 5
  until             : cni_install.rc == 0
  tags              :
  - cni
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Patch weave-net
  when              : cni_plugin == 'weave'
  # https://github.com/weaveworks/weave/issues/3816
  shell             : >
                      kubectl -n kube-system patch daemonset weave-net -n kube-system -p
                      '{
                         "spec":{
                           "template":{
                             "spec":{
                               "containers":[
                                 {
                                   "name":"weave",
                                    "command": [
                                      "/bin/sh",
                                      "-c",
                                      "sed \"/ipset destroy weave-kube-test$/ i sleep 1\" /home/weave/launch.sh | /bin/sh"
                                    ]
                                 }
                               ]
                             }
                           }
                         }
                       }'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name              : Configure kube-proxy
  import_tasks      : kube-proxy.yml
  tags              :
  - kube-proxy
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
